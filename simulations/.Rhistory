geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
View(res_apeglm)
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
save(res_apeglm, file = "res_mixed_cnv.Rdata")
head(cnv)
# Simulate Mixed signal #
deg_up <- subset(res_apeglm, res_apeglm$padj < 0.05 & res_apeglm$log2FoldChange > 0.3)
deg_down <- subset(res_apeglm, res_apeglm$padj < 0.05 & res_apeglm$log2FoldChange < -0.3)
deg <- rbind(deg_up, deg_down)
rna_counts_sim2 <- rna_counts_sim_2[rownames(rna_counts_sim_2) %in% rownames(deg),]
rna_tumor_sim2 <- rna_counts_sim2[,21:40]
rna_normal_sim2 <- rna_counts_sim2[,1:20]
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
knitr::opts_chunk$set(warning = FALSE, message = FALSE, fig.width=3, fig.height=3, fig.align = "center")
load("~/Documents/PhD_AI/CN-aware-DGE/simulation/mean.Rdata")
load("~/Documents/PhD_AI/CN-aware-DGE/simulation/dispersion.Rdata")
dispersion_1 <- dispersion[1:9000]
intercept_1 <- intercept[1:9000]
# compcodeR simulator function: Simulation of normal RNA read counts #
# `the pairs of 'mean' ad 'dispersion' are estimated from TCGA-BRCA dataset (normal tissue profile) and used for the simulation of RNA counts (sampled from NB distribution)
set.seed(12345)
rna_counts_sim_1 <- compcodeR::generateSyntheticData(dataset = "rna_counts_sim", n.vars = 9000,
samples.per.cond = 20, n.diffexp = 0,
repl.id = 1, seqdepth = 1e7,
fraction.upregulated = 0.0,
between.group.diffdisp = F,
filter.threshold.total = 0,
filter.threshold.mediancpm = 0,
fraction.non.overdispersed = 0,
relmeans = intercept_1,
dispersions = dispersion_1,
random.outlier.high.prob = 0,
random.outlier.low.prob = 0,
#output.file = "rna_counts_sim.rds")
rna_counts_sim_1 <- rna_counts_sim_1@count.matrix
# compcodeR simulator function: Simulation of normal RNA read counts #
# `the pairs of 'mean' ad 'dispersion' are estimated from TCGA-BRCA dataset (normal tissue profile) and used for the simulation of RNA counts (sampled from NB distribution)
set.seed(12345)
rna_counts_sim_1 <- compcodeR::generateSyntheticData(dataset = "rna_counts_sim", n.vars = 9000,
samples.per.cond = 20, n.diffexp = 0,
repl.id = 1, seqdepth = 1e7,
fraction.upregulated = 0.0,
between.group.diffdisp = F,
filter.threshold.total = 0,
filter.threshold.mediancpm = 0,
fraction.non.overdispersed = 0,
relmeans = intercept_1,
dispersions = dispersion_1,
random.outlier.high.prob = 0,
random.outlier.low.prob = 0)
#output.file = "rna_counts_sim.rds")
rna_counts_sim_1 <- rna_counts_sim_1@count.matrix
# Generate metadata #
metadata <- data.frame(patID = colnames(rna_counts_sim_1),
condition = rep(c("0", "1"), each = 20))
metadata <- metadata %>% remove_rownames %>% column_to_rownames(var = "patID")
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_counts_sim_1,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
#res <- results(dds, tidy=TRUE, contrast=c("condition","0","1")) %>% as.tibble()
#res_apeglm <- lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.data.frame()
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_counts_sim_1,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res <- results(dds, tidy=TRUE, contrast=c("condition","0","1")) %>% as.tibble()
res_apeglm <- lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.data.frame()
# compcodeR simulator function: Simulation of normal RNA read counts #
# `the pairs of 'mean' ad 'dispersion' are estimated from TCGA-BRCA dataset (normal tissue profile) and used for the simulation of RNA counts (sampled from NB distribution)
set.seed(12345)
rna_counts_sim_1 <- compcodeR::generateSyntheticData(dataset = "rna_counts_sim", n.vars = 9000,
samples.per.cond = 20, n.diffexp = 0,
repl.id = 1, seqdepth = 1e7,
fraction.upregulated = 0.0,
between.group.diffdisp = F,
filter.threshold.total = 0,
filter.threshold.mediancpm = 0,
fraction.non.overdispersed = 0,
relmeans = intercept_1,
dispersions = dispersion_1,
random.outlier.high.prob = 0,
random.outlier.low.prob = 0)
#output.file = "rna_counts_sim.rds")
rna_counts_sim_1 <- rna_counts_sim_1@count.matrix
# Generate metadata #
metadata <- data.frame(patID = colnames(rna_counts_sim_1),
condition = rep(c("0", "1"), each = 20))
metadata <- metadata %>% remove_rownames %>% column_to_rownames(var = "patID")
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_counts_sim_1,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res <- results(dds, tidy=TRUE, contrast=c("condition","0","1")) %>% as.tibble()
res_apeglm <- lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.data.frame()
res$diffexpressed <- "NO"
res$diffexpressed[res$log2FoldChange >= 1.0 & res$padj < 0.05] <- "UP"
res$diffexpressed[res$log2FoldChange <= -1.0 & res$padj < 0.05] <- "DOWN"
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
res <- res %>% dplyr::filter(diffexpressed == "NO")
res_apeglm <- res_apeglm %>% dplyr::filter(diffexpressed == "NO")
library(gridExtra)
library(ggplot2)
library(colorspace)
library(ggpubr)
res_apeglm <- res_apeglm[which(res_apeglm$padj>0.001), ]
p1 <- ggplot(data = res, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim RNA counts (norm)",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
#p2 <- plotMA(res_apeglm, ylim=c(-8,8), cex=.8)
#abline(h=c(-1,1), col="dodgerblue", lwd=2)
p2 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-4, 8, 2))+
labs(title="Sim RNA counts (apeglm)",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p1
p2
# CNV simulation #
load("/Users/katsiarynadavydzenka/Documents/PhD_AI/TCGA/lung_cancer/LUAD/luad_cnv_sd.Rdata")
rna_normal <- rna_counts_sim_1[,1:20]
rna_tumor <- rna_counts_sim_1[,21:40]
cnv_tumor_gr1 <- as.matrix(luad_cnv_sd)
cnv_tumor_sd <- matrixStats::colSds(cnv_tumor_gr1) %>%
as.data.frame() %>%
setNames("sd") %>%
subset(sd > 1.8)
cnv_tumor_gr1 <- cnv_tumor_gr1[,colnames(cnv_tumor_gr1) %in% rownames(cnv_tumor_sd)]
cnv_tumor_gr1 <- cnv_tumor_gr1[1:1300,]
cnv_tumor_gr1 <- replace(cnv_tumor_gr1, cnv_tumor_gr1>10, 10) #CN truncation
colnames(cnv_tumor_gr1) <- colnames(rna_tumor)
rownames(cnv_tumor_gr1) <- paste0("G", 1:(nrow(cnv_tumor_gr1)))
cnv_0 <- sapply(1:20, function(x) sample(x=c(0.5,1,2,3), size = 300, replace=TRUE, prob = c(.50, .30, .10, .10)))
cnv_1 <- sapply(1:20, function(x) sample(x=c(0.5,1,2,3), size = 400, replace=TRUE, prob = c(.20, .60, .10, .10)))
cnv_2 <- sapply(1:20, function(x) sample(x=c(1,2,3,4), size = 7000, replace=TRUE, prob = c(.05, .70, .10, .10)))
cnv_tumor <- rbind(cnv_tumor_gr1, cnv_0, cnv_1, cnv_2) %>% as.matrix()
cnv_norm <- matrix(2, nrow(rna_normal), 20)
colnames(cnv_norm) <- colnames(rna_normal)
rownames(cnv_norm) <- rownames(rna_normal)
cnv_gr1 <- cbind(cnv_norm, cnv_tumor)
#cnv_gr1 <- apply(cnv_gr1, 2, function(x) x/2)
#rownames(cnv) <- paste0("G", 1:(nrow(cnv)))
# CN proportion #
hist(rowMeans(cnv_tumor),
main = "Simulated CN",
xlab = "CN state",
ylab = "Proportion",
col = "#E1DEFC",
prob = TRUE,
breaks = 6)
# Simulation of 30 % CN dependent genes #
#cnv <- cbind(cnv_norm, cnv_tumor)
cnv_gr1 <- apply(cnv_gr1, 2, function(x) x/2)
rownames(cnv_gr1) <- paste0("G", 1:(nrow(cnv_gr1)))
rna_cnv <- rna_counts_sim_1 * cnv_gr1
rna_cnv <- ceiling(rna_cnv)
save(rna_cnv, file = "rna_cnv.Rdata")
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_cnv,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
#res <- results(dds, tidy=TRUE, contrast=c("condition","1","0")) %>% as.tibble()
#res_apeglm <- lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.tibble
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p3 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 0.5) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-4, 8, 2))+
labs(title="Sim CN-induced DE",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p3
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_cnv,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res <- results(dds, tidy=TRUE, contrast=c("condition","1","0")) %>% as.tibble()
res_apeglm <- lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.tibble
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p3 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 0.5) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-4, 8, 2))+
labs(title="Sim CN-induced DE",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p3
save(res_apeglm, file = "res1_sim_cnv.Rdata")
# CN normalization #
cnv_norm <- cnv_gr1[,1:20]
cnv_tumor <- cnv_gr1[,21:40]
cnv_gr1 <- cbind(cnv_tumor, cnv_norm)
#cnv_gr1 <- apply(cnv, 2, function(x) x/2)
cnv1 <- apply(cnv_gr1, 2, function(x) x+10e-9)
rownames(cnv1) <- paste0("G", 1:(nrow(cnv1)))
rna_cnv_norm <- rna_cnv * cnv1
rna_cnv_norm <- ceiling(rna_cnv_norm)
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_cnv_norm,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res_apeglm <- DESeq2::lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.tibble
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
#res <- res[-c(3450,11955),]
#res_apeglm <- res_apeglm[-c(3450,11955),]
res_apeglm <- res_apeglm[which(res_apeglm$padj>0.1 & res_apeglm$log2FoldChange < 10.0),]
p4 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("gray", "blue", "red"))+
scale_x_continuous(breaks = seq(-4, 10, 2))+
labs(title="Sim CN-normalized",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p4
save(res_apeglm, file = "res2_cnv_norm.Rdata")
# Generate RNA counts with other signal inducing DGE #
dispersion_2 <- dispersion[9001:12000] + 1 %>% as.vector()
intercept_2 <- intercept[9001:12000] %>% as.vector()
rna_counts_sim_2 <- compcodeR::generateSyntheticData(dataset = "rna_counts_sim_2", n.vars = 3000,
samples.per.cond = 20, n.diffexp = 3000,
repl.id = 1, seqdepth = 1e7,
fraction.upregulated = 0.5,
filter.threshold.total = 0,
filter.threshold.mediancpm = 0,
fraction.non.overdispersed = 0,
relmeans = intercept_2,
dispersions = dispersion_2,
effect.size = 1.0,
random.outlier.high.prob = 0,
random.outlier.low.prob = 0,
output.file = "rna_counts_sim_2.rds")
rna_counts_sim_2 <- rna_counts_sim_2@count.matrix
# Generate metadata #
metadata <- data.frame(patID = colnames(rna_counts_sim_2),
condition = rep(c("0", "1"), each = 20))
metadata <- metadata %>% remove_rownames %>% column_to_rownames(var = "patID")
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_counts_sim_2,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res <- results(dds, tidy=TRUE, contrast=c("condition","0","1")) %>% as.tibble()
res_apeglm <- lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.data.frame()
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
res_apeglm <- res_apeglm[which(res_apeglm$log2FoldChange < 4.0) ,]
p5 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 0.5) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-4, 4, 2))+
labs(title="Sim Other signal",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p5
#getting DE genes
sum(res_apeglm$padj < 0.05 & res_apeglm$log2FoldChange >= 0.3, na.rm=TRUE) #up_regulated
sum(res_apeglm$padj < 0.05 & res_apeglm$log2FoldChange <= -0.3, na.rm=TRUE) #down-reg
deg_up <- subset(res_apeglm, res_apeglm$padj < 0.05 & res_apeglm$log2FoldChange > 0.3)
deg_down <- subset(res_apeglm, res_apeglm$padj < 0.05 & res_apeglm$log2FoldChange < -0.3)
deg <- rbind(deg_up, deg_down)
rna_counts_sim2 <- rna_counts_sim_2[rownames(rna_counts_sim_2) %in% rownames(deg),]
rna_tumor_sim2 <- rna_counts_sim2[,21:40]
rna_normal_sim2 <- rna_counts_sim2[,1:20]
cnv_tumor_gr2 <- as.matrix(luad_cnv_sd)
cnv_tumor_sd <- matrixStats::colSds(cnv_tumor_gr2) %>%
as.data.frame() %>%
setNames("sd") %>%
subset(sd > 1.8)
cnv_tumor_gr2 <- cnv_tumor_gr2[,colnames(cnv_tumor_gr2) %in% rownames(cnv_tumor_sd)]
cnv_tumor_gr2 <- cnv_tumor_gr2[1301:1711,]
cnv_tumor_gr2 <- replace(cnv_tumor_gr2, cnv_tumor_gr2>10, 10) #CN truncation
colnames(cnv_tumor_gr2) <- colnames(rna_tumor_sim2)
rownames(cnv_tumor_gr2) <- paste0("G", 1:(nrow(cnv_tumor_gr2)))
cnv_0 <- sapply(1:20, function(x) sample(x=c(0.5,1,2,3), size = 200, replace=TRUE, prob = c(.50, .30, .10, .10)))
cnv_1 <- sapply(1:20, function(x) sample(x=c(0.5,1,2,3), size = 237, replace=TRUE, prob = c(.20, .60, .10, .10)))
cnv_tumor2 <- rbind(cnv_tumor_gr2, cnv_0, cnv_1) %>% as.matrix()
cnv_norm2 <- matrix(2, nrow(rna_normal_sim2), 20)
colnames(cnv_norm2) <- colnames(rna_normal_sim2)
rownames(cnv_norm2) <- rownames(rna_normal_sim2)
cnv_gr2 <- cbind(cnv_norm2, cnv_tumor2)
cnv_gr2 <- apply(cnv_gr2, 2, function(x) x/2)
rownames(cnv_gr2) <- paste0("G", 1:(nrow(cnv_gr2)))
rna_cnv2 <- rna_counts_sim2 * cnv_gr2
rna_cnv2 <- ceiling(rna_cnv2)
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_mixed,
colData = metadata,
design = ~ condition)
#cnv_norm <- cnv_gr1[,21:40]
#cnv_tumor <- cnv_gr1[,1:20]
#cnv_gr1 <- cbind(cnv_norm, cnv_tumor)
rna_mixed <- rbind(rna_cnv, rna_cnv2) %>% as.matrix()
cnv <- rbind(cnv_gr1, cnv_gr2) %>% as.matrix()
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_mixed,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res_apeglm <- DESeq2::lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.tibble
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
#res_apeglm <- res_apeglm[which(res_apeglm$log2FoldChange < 4.0) ,]
p6 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 0.5) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-4, 4, 2))+
labs(title="Sim Mixed signal",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p6
save(res_apeglm, file = "res_sim_mixedsig.Rdata")
save(res_apeglm, file = "res3_sim_mixedsig.Rdata")
head(cnv)
#cnv_norm <- cnv[,1:20]
#cnv_tum <- cnv[,21:40]
#cnv <- cbind(cnv_tum, cnv_tum)
#cnv <- apply(cnv, 2, function(x) x/2)
cnv <- apply(cnv, 2, function(x) x+10e-9)
rownames(cnv) <- paste0("G", 1:(nrow(cnv)))
rna_mixed_norm <- rna_mixed * cnv
rna_mixed_norm <- ceiling(rna_mixed_norm)
dds <- DESeq2::DESeqDataSetFromMatrix(countData = rna_mixed_norm,
colData = metadata,
design = ~ condition)
dds <- DESeq2::DESeq(dds)
res_apeglm <- DESeq2::lfcShrink(dds, coef="condition_1_vs_0", type="apeglm") %>% as.tibble
res <- DESeq2::results(dds, tidy=TRUE, contrast=c("condition","1","0")) %>% as.tibble()
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 1) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
res_apeglm$diffexpressed <- "NO"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange >= 1.0 & res_apeglm$padj < 0.05] <- "UP"
res_apeglm$diffexpressed[res_apeglm$log2FoldChange <= -1.0 & res_apeglm$padj < 0.05] <- "DOWN"
p7 <- ggplot(data = res_apeglm, aes(x = log2FoldChange, y = -log10(padj), col = diffexpressed)) +
geom_vline(xintercept = c(-1.0, 1.0), col = "darkgreen", linetype = 'dashed') +
geom_hline(yintercept = -log10(0.05), col = "darkgreen", linetype = 'dashed') +
geom_point(size = 0.5) +
scale_color_manual(values = c("blue", "gray", "red"))+
scale_x_continuous(breaks = seq(-10, 10, 2))+
labs(title="Sim Mixed signal CN norm",x="effect size (log2)")+
theme_classic()+
theme(legend.position="none")+
font("xy.text", size = 10, color = "black")+
font("xlab", size = 10)+
font("ylab", size = 10)+
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p7
sim_plot <- gridExtra::grid.arrange(p1, p3, p4, p6, p7, nrow = 2)
sim_plot <- gridExtra::grid.arrange(p2, p3, p4, p6, p7, nrow = 2)
